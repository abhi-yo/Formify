generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id                 String    @id @default(cuid())
  name               String
  stripeCustomerId   String?   @unique
  subscriptionStatus String?   @default("free")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  projects           Project[]

  @@map("organizations")
}

model Project {
  id           String       @id @default(cuid())
  orgId        String
  name         String
  publicKey    String       @unique
  secretKey    String       @unique
  settings     Json         @default("{}")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  organization Organization @relation(fields: [orgId], references: [id], onDelete: Cascade)
  submissions  Submission[]
  eventLogs    EventLog[]

  @@map("projects")
}

model Submission {
  id          String       @id @default(cuid())
  projectId   String
  createdAt   DateTime     @default(now())
  ipHash      String
  userAgent   String?
  fieldsJSON  Json
  status      String       @default("received")
  project     Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  attachments Attachment[]

  @@map("submissions")
}

model Attachment {
  id           String     @id @default(cuid())
  submissionId String
  r2Key        String
  contentType  String
  size         Int
  createdAt    DateTime   @default(now())
  submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)

  @@map("attachments")
}

model EventLog {
  id        String   @id @default(cuid())
  projectId String
  type      String
  metaJSON  Json
  createdAt DateTime @default(now())
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("event_logs")
}